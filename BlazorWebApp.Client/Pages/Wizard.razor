@page "/wizard"
@rendermode InteractiveAuto
@using BlazorWebApp.Shared
@using MudBlazor
@using BlazorWebApp.Client.Pages
@inject IWizardFormService WizardService

<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-6">
    <MudCard Elevation="3" Class="rounded-lg">
        <MudCardHeader>
            <MudText Typo="Typo.h5">Multi-Step Form</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudStepper @bind-Value="_activeStep" Linear="true" Color="Color.Primary">
                <MudStep Title="Personal Info" Icon="@Icons.Material.Filled.Person">
                    <MudText Typo="Typo.h6" Class="mb-4">First Name</MudText>
                    <BlazorWebApp.Client.Pages.WizardStep1 FormData="_formData" />
                    <div class="d-flex justify-end mt-4">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@NextStep">Next</MudButton>
                    </div>
                </MudStep>
                <MudStep Title="Additional Info" Icon="@Icons.Material.Filled.Info">
                    <MudText Typo="Typo.h6" Class="mb-4">Last Name</MudText>
                    <BlazorWebApp.Client.Pages.WizardStep2 FormData="_formData" />
                    <div class="d-flex justify-space-between mt-4">
                        <MudButton Variant="Variant.Outlined" OnClick="@PrevStep">Back</MudButton>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@NextStep">Next</MudButton>
                    </div>
                </MudStep>
                <MudStep Title="Review & Submit" Icon="@Icons.Material.Filled.CheckCircle">
                    <MudText Typo="Typo.h6" Class="mb-4">Review Your Information</MudText>
                    <BlazorWebApp.Client.Pages.WizardReview FormData="_formData" />
                    <div class="d-flex justify-space-between mt-4">
                        <MudButton Variant="Variant.Outlined" OnClick="@PrevStep">Back</MudButton>
                        <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="@OnSubmit">Submit</MudButton>
                    </div>
                    @if (_submitted)
                    {
                        <MudAlert Severity="Severity.Success" Class="mt-4">Form submitted successfully!</MudAlert>
                    }
                </MudStep>
            </MudStepper>
        </MudCardContent>
    </MudCard>
</MudContainer>

@code {
    private int _activeStep = 0;
    private WizardFormData _formData = new();
    private bool _submitted = false;

    private void NextStep()
    {
        if (_activeStep < 2) _activeStep++;
    }

    private void PrevStep()
    {
        if (_activeStep > 0) _activeStep--;
    }

    private async Task OnSubmit()
    {
        await WizardService.SubmitFormAsync(_formData);
        _submitted = true;
    }
}
